package com.example.cve202324998.conf;

import lombok.RequiredArgsConstructor;
import org.apache.commons.fileupload.FileItemFactory;
import org.apache.commons.fileupload.FileUpload;
import org.apache.commons.fileupload.servlet.ServletFileUpload;
import org.springframework.boot.autoconfigure.web.ServerProperties;
import org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer;
import org.springframework.boot.web.embedded.tomcat.TomcatConnectorCustomizer;
import org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.web.multipart.commons.CommonsMultipartResolver;
import org.springframework.web.multipart.support.StandardServletMultipartResolver;

@Configuration
@RequiredArgsConstructor
public class TomcatConfig {

    private final ServerProperties serverProperties;

    @Bean
    public TomcatServletWebServerFactoryCustomizer tomcatCustomizer() {
        return new TomcatServletWebServerFactoryCustomizer(serverProperties) {
            @Override
            public void customize(TomcatServletWebServerFactory factory) {
                // customize the factory
                factory.addConnectorCustomizers(connectorCustomizer());
            }
        };
    }

    @Bean
    public TomcatConnectorCustomizer connectorCustomizer() {
        return connector -> {
            // set connector properties here
            connector.setPort(8080);
            connector.setSecure(false);
//            connector.setMaxParameterCount(11);
        };
    }

    @Bean
    public CommonsMultipartResolver multipartResolver() {
        return new CommonsMultipartResolver() {
            @Override
            protected FileUpload newFileUpload(FileItemFactory fileItemFactory) {
                FileUpload fileUpload = new ServletFileUpload(fileItemFactory);
//                fileUpload.setFileCountMax(10000);
                return fileUpload;
            }
        };
    }

//    @Bean
//    public StandardServletMultipartResolver multipartResolver() {
//        return new StandardServletMultipartResolver();
//    }
}
